trigger:
- main

pool:
  name: 'webapppool'

variables:
  - group: Myappsecrets  # SONAR_TOKEN burada tanımlı olmalı

stages:
- stage: SecurityScan
  displayName: 'OWASP + SonarScanner CLI'
  jobs:
  - job: DependencyAndStaticCheck
    displayName: 'Dependency & Static Analysis'
    steps:
    
    - checkout: self

    # OWASP Dependency-Check taraması
    - script: |
        mkdir -p $(Build.ArtifactStagingDirectory)/owasp
        chmod -R 777 $(Build.ArtifactStagingDirectory)/owasp

        docker run --rm \
          -v $(Build.SourcesDirectory):/src:ro \
          -v $(Build.ArtifactStagingDirectory)/owasp:/reports \
          -v /opt/dependency-check-data:/usr/share/dependency-check/data \
          owasp/dependency-check:latest \
          --scan /src \
          --format ALL \
          --project "$(Build.Repository.Name)" \
          --out /reports
      displayName: 'Run OWASP Dependency-Check'

    # OWASP raporlarını publish et
    - task: PublishBuildArtifacts@1
      displayName: 'Publish OWASP Reports'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/owasp'
        ArtifactName: 'dependency-check-report'

    # SonarScanner CLI çalıştır (sonar-project.properties dosyasını kullanır)
    - script: |
        /opt/sonar-scanner-5.0.1.3006-linux/bin/sonar-scanner -Dsonar.login=$(SONAR_TOKEN) -X
      displayName: 'Run SonarScanner (with sonar-project.properties)'

